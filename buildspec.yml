version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: sandro-suqnidze/spring-boot
    IMAGE_TAG: latest
    AWS_REGION: us-west-2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 151182332702.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Cloning source complete.
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Building image with tag $IMAGE_TAG

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG 151182332702.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image to ECR...
      - docker push 151182332702.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG 151182332702.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - docker push $ECR_REPO_URL:latest
      - echo Writing image definition file...
      - printf '[{"name":"sandro-suqnidze-spring-boot-container","imageUri":"151182332702.dkr.ecr.%s.amazonaws.com/%s:%s"}]' $AWS_REGION $IMAGE_REPO_NAME $IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
